# Core backend settings
SA_JWT_SECRET=please-change-me
SA_API_V1_PREFIX=/api
SA_DATABASE_URL=sqlite:///./sales_assistant.db

# Bidding assistant LLM configuration
BIDDING_ASSISTANT_LLM_PROVIDER=openai  # openai, azure_openai, stub
BIDDING_ASSISTANT_LLM_MODEL=gpt-4o-mini
BIDDING_ASSISTANT_LLM_API_KEY=sk-your-openai-key-here
BIDDING_ASSISTANT_LLM_BASE_URL=https://api.openai.com/v1
BIDDING_ASSISTANT_LLM_TIMEOUT=90  # 推荐90秒，0=无限等待（不推荐）

# SplitWorkload / Costing module LLM configuration
SPLITWORKLOAD_MODEL_BASE_URL=https://dashscope.aliyuncs.com/compatible-mode/v1
SPLITWORKLOAD_MODEL_PATH=qwen3-max
SPLITWORKLOAD_MODEL_API_KEY=sk-your-dashscope-key-here
SPLITWORKLOAD_MODEL_TIMEOUT=60  # 推荐60秒，0=无限等待（不推荐）

# Optional: allow local frontend to call backend without extra CORS setup
# SA_CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:5500"]

# ===== 新增：任务系统配置说明 =====
#
# 超时配置建议：
# - OpenAI标书分析：90秒（gpt-4o-mini较快）
# - DashScope工时拆分：60秒（qwen3-max响应稳定）
# - Azure OpenAI：120秒（响应较慢）
#
# 警告：不要设置为0（无限等待），会导致worker阻塞
#
# 重试配置：
# - 默认最大重试次数：3次
# - 重试策略：指数退避（2s, 4s, 8s, 16s, 30s）
# - 重试条件：网络超时、5xx错误、连接错误
#
# Worker配置（在代码中修改 backend/app/tasks/worker.py）：
# - poll_interval: 2.0秒  # 轮询间隔
# - batch_size: 5         # 每批处理任务数
# - max_consecutive_errors: 10  # 最大连续错误次数
